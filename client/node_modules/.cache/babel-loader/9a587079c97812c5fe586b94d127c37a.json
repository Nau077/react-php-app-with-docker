{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/core/delivery/delivery__form/delivery__form-upload.js\";\nimport React from \"react\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport red from \"@material-ui/core/colors/red\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    margin: 'auto',\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing(2)\n  },\n  iconHover: {\n    margin: theme.spacing(2),\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing(2),\n    backgroundColor: \"default\"\n  }\n});\n\nclass Delivery__Form_Upload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainState: \"initial\",\n      imageUploaded: 0,\n      selectedFile: null,\n      type: null,\n      name: null\n    };\n\n    this.handleUploadClick = event => {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      let url = '';\n\n      if (reader && file && (file.type.match('image.*') || file.type.match('application/pdf'))) {\n        url = reader.readAsDataURL(file);\n      } else {\n        return;\n      }\n\n      this.props.handleUploadFile(file);\n      const name = event.target.files[0].name;\n      const lastDot = name.lastIndexOf('.');\n      const fileName = name.substring(0, lastDot);\n      const ext = name.substring(lastDot + 1);\n\n      reader.onloadend = function (e) {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      }.bind(this);\n\n      this.setState({\n        mainState: \"uploaded\",\n        selectedFile: event.target.files[0],\n        imageUploaded: 1,\n        type: ext,\n        name: name\n      });\n    };\n  }\n\n  renderInitialState() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/jpeg,image/gif,image/png,application/pdf,image/x-eps\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleUploadClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      component: \"span\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(CloudUploadIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }\n    }))))));\n  }\n\n  renderUploadedState() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, this.state.type !== 'pdf' ? /*#__PURE__*/React.createElement(\"img\", {\n      width: \"70%\",\n      className: classes.media,\n      src: this.state.selectedFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }, this.state.name)));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-card__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-card__signature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0434\\u043E\\u0432\\u0435\\u0440\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u043D\\u0430 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }\n    }, \"(\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043B\\u0438 pdf)\")), this.renderInitialState(), this.state.mainState == \"uploaded\" && this.renderUploadedState())));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Delivery__Form_Upload);","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/core/delivery/delivery__form/delivery__form-upload.js"],"names":["React","CardActionArea","CardContent","Fab","blue","Grid","CloudUploadIcon","red","withStyles","styles","theme","root","backgroundColor","palette","background","paper","margin","display","justifyContent","alignItems","icon","spacing","iconHover","color","cardHeader","textalign","align","input","title","fontWeight","fontFamily","button","secondaryButton","typography","Delivery__Form_Upload","Component","state","mainState","imageUploaded","selectedFile","type","name","handleUploadClick","event","file","target","files","reader","FileReader","url","match","readAsDataURL","props","handleUploadFile","lastDot","lastIndexOf","fileName","substring","ext","onloadend","e","setState","result","bind","renderInitialState","classes","renderUploadedState","media","render","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport red from \"@material-ui/core/colors/red\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        margin: 'auto',\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\"\n    },\n    icon: {\n        margin: theme.spacing(2)\n    },\n    iconHover: {\n        margin: theme.spacing(2),\n        \"&:hover\": {\n            color: red[800]\n        }\n    },\n    cardHeader: {\n        textalign: \"center\",\n        align: \"center\",\n        backgroundColor: \"white\"\n    },\n    input: {\n        display: \"none\"\n    },\n    title: {\n        color: blue[800],\n        fontWeight: \"bold\",\n        fontFamily: \"Montserrat\",\n        align: \"center\"\n    },\n    button: {\n        color: blue[900],\n        margin: 10\n    },\n    secondaryButton: {\n        color: \"gray\",\n        margin: 10\n    },\n    typography: {\n        margin: theme.spacing(2),\n        backgroundColor: \"default\"\n    },\n\n});\n\nclass Delivery__Form_Upload extends React.Component {\n\n  state = {\n      mainState: \"initial\",\n      imageUploaded: 0,\n      selectedFile: null,\n      type: null,\n      name: null\n  };\n\n  handleUploadClick = event => {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      let url = '';\n      if (reader && file && (file.type.match('image.*') || file.type.match('application/pdf'))) {\n          url = reader.readAsDataURL(file);\n      } else {\n          return;\n      }\n    \n      this.props.handleUploadFile(file); \n\n      const name = event.target.files[0].name;\n      const lastDot = name.lastIndexOf('.');\n\n      const fileName = name.substring(0, lastDot);\n      const ext = name.substring(lastDot + 1);\n\n      reader.onloadend = function(e) {\n          this.setState({\n              selectedFile: [reader.result]\n          });\n      }.bind(this);\n\n      this.setState({\n          mainState: \"uploaded\",\n          selectedFile: event.target.files[0],\n          imageUploaded: 1,\n          type: ext,\n          name: name\n      });\n    \n  };\n\n  renderInitialState() {\n      const { classes } = this.props;\n\n      return (\n          <React.Fragment>\n              <CardContent>\n                  <Grid container justify=\"center\" alignItems=\"center\">\n                      <input\n                          accept=\"image/jpeg,image/gif,image/png,application/pdf,image/x-eps\"\n                          className={classes.input}\n                          id=\"contained-button-file\"\n                          multiple\n                          type=\"file\"\n                          onChange={this.handleUploadClick}\n                      />\n                      <label htmlFor=\"contained-button-file\">\n                          <Fab component=\"span\" className={classes.button}>\n                              <CloudUploadIcon/>\n                          </Fab>\n                      </label>\n                  </Grid>\n              </CardContent>\n          </React.Fragment>\n      );\n  }\n\n  renderUploadedState() {\n      const { classes } = this.props;\n\n      return (\n          <React.Fragment>\n              <CardActionArea>\n                  {\n                      this.state.type !== 'pdf' ?\n                          <img\n                              width=\"70%\"\n                              className={classes.media}\n                              src={this.state.selectedFile}\n                          /> :\n                          <p>{this.state.name}</p>\n                  }\n              </CardActionArea>\n          </React.Fragment>\n      );\n  }\n \n\n  render() {\n      const { classes } = this.props;\n\n      return (\n          <React.Fragment>\n              <div className={classes.root}>\n                  <div className=\"upload-card__wrapper\">\n                      <div className=\"upload-card__signature\">\n                          <p>Загрузите доверенность на водителя</p>\n                          <p>(изображение или pdf)</p>\n                      </div>\n                      {(this.renderInitialState())}\n                      {  (this.state.mainState == \"uploaded\" &&\n                this.renderUploadedState())\n                      }\n                  </div>\n              </div>\n          </React.Fragment>\n      );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Delivery__Form_Upload);\n"]},"metadata":{},"sourceType":"module"}