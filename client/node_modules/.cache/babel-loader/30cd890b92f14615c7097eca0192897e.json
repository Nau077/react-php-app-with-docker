{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form.js\";\nimport React, { useState, useEffect } from 'react';\nimport FormSelect from './delivery_form-select';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types'; // import DateFnsUtils from '@date-io/date-fns';\n// import {\n//     MuiPickersUtilsProvider,\n//     KeyboardTimePicker,\n//     KeyboardDatePicker,\n//   } from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '45ch',\n      textField: {\n        flexBasis: 200,\n        textField: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1)\n        }\n      }\n    }\n  }\n}));\n\nfunction DeliveryForm(props) {\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const [formState, setFormState] = React.useState({\n    rigion: '',\n    waterbase: '',\n    weight: '',\n    adress: ''\n  });\n\n  const handleChange = prop => event => {\n    setFormState({ ...formState,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleSelectChange = value => {\n    setFormState({ ...formState,\n      waterbase: value\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, props.rigionValue ? /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required1\",\n    label: \"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",\n    className: classes.textField,\n    value: props.rigionValue,\n    InputProps: {\n      readOnly: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }, \"\\u0437\\u0430\\u0433\\u043B\\u0443\\u0448\\u043A\\u0430\"), /*#__PURE__*/React.createElement(FormSelect, {\n    handleSelectChange: handleSelectChange,\n    name: formState.waterbase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required2\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043C\\u0430\\u0441\\u0441\\u0443 \\u0432\\u043E\\u0434\\u044B \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n    className: classes.textField,\n    value: formState.weight,\n    onChange: handleChange('weight'),\n    InputProps: {\n      inputComponent: NumberFormatCustom,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 35\n        }\n      }, \"T\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    shrink: \"true\",\n    required: true,\n    id: \"standard-required3\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0441\",\n    className: classes.textField,\n    value: formState.adress,\n    onChange: handleChange('adress'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 14\n    }\n  }));\n}\n\nexport default DeliveryForm;","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form.js"],"names":["React","useState","useEffect","FormSelect","TextField","makeStyles","InputAdornment","NumberFormat","PropTypes","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","useStyles","theme","root","margin","spacing","width","textField","flexBasis","marginLeft","marginRight","DeliveryForm","selectedDate","setSelectedDate","Date","handleDateChange","date","formState","setFormState","rigion","waterbase","weight","adress","handleChange","prop","event","handleSelectChange","classes","rigionValue","readOnly","inputComponent","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormSelect from './delivery_form-select'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\n// import DateFnsUtils from '@date-io/date-fns';\n\n// import {\n//     MuiPickersUtilsProvider,\n//     KeyboardTimePicker,\n//     KeyboardDatePicker,\n//   } from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n  \n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={inputRef}\n        onValueChange={values => {\n          onChange({\n            target: {\n              value: values.value,\n            },\n          });\n        }}\n        isNumericString\n      />\n    );\n  }\n  \n  NumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n  \nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '45ch',\n        textField: {\n            flexBasis: 200,\n            textField: {\n                marginLeft: theme.spacing(1),\n                marginRight: theme.spacing(1),\n              },\n          },\n      },\n    },\n  }));\n\n\n\nfunction DeliveryForm(props) {\n\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n    const handleDateChange = date => {\n        setSelectedDate(date);\n    };\n\n\n    const [formState, setFormState] = React.useState({\n        rigion: '',\n        waterbase: '',\n        weight: '',\n        adress: ''\n      });\n\n    \n      const handleChange = prop => event => {\n        setFormState({\n             ...formState,\n              [prop]: event.target.value \n            });\n      };\n\n      const handleSelectChange = value => {\n        setFormState({\n             ...formState,\n              waterbase: value\n            });\n      };\n\n    const classes = useStyles();\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n             {props.rigionValue ? <TextField \n                required \n                id=\"standard-required1\" \n                label=\"Ваш регион\"\n                className={classes.textField}\n                value={props.rigionValue}\n                InputProps={{\n                    readOnly: true,\n                }}\n             />\n             : <p>заглушка</p>\n            }\n            <FormSelect handleSelectChange={handleSelectChange} name={formState.waterbase}/>\n            <TextField \n                required \n                id=\"standard-required2\" \n                label=\"Напишите массу воды в тоннах\"\n                className={classes.textField}\n                value={formState.weight}\n                onChange={handleChange('weight')}\n                InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    endAdornment: <InputAdornment position=\"end\">T</InputAdornment>,\n                  }}\n             />\n             <TextField\n                shrink='true'\n                required \n                id=\"standard-required3\" \n                label=\"Напишите адресс\"\n                className={classes.textField}\n                value={formState.adress}\n                onChange={handleChange('adress')}\n             />\n             {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n             <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Date picker inline\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n            </MuiPickersUtilsProvider> */}\n         </form>\n        \n    );\n}\n\nexport default DeliveryForm;"]},"metadata":{},"sourceType":"module"}