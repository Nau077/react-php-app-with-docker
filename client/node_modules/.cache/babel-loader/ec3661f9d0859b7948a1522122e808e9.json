{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery/delivery__map/delivery__map.js\";\nimport React, { useState } from 'react';\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\nimport { useDispatch } from 'react-redux';\nimport { enableLoading, setSuccessLoading } from '../../../actions/actions';\n\nfunction DeliveryMap(props) {\n  const dispatch = useDispatch();\n  const [mapData, setMapData] = useState({\n    center: [59.938924, 30.315311],\n    zoom: 8\n  });\n  const [coordinates, setCoordinates] = useState([[55.684758, 37.738521]]);\n  const [YMapState, setYMapState] = useState('');\n\n  const onMapClick = event => {\n    event.stopPropagation();\n    const coords = event.get(\"coords\");\n    setCoordinates([coords]);\n    setMapData({\n      center: coords,\n      zoom: 8\n    });\n    const myGeocoder = YMapState.geocode([coords]);\n    myGeocoder.then(res => {\n      let firstGeoObject = res.geoObjects.get(0);\n      const region = firstGeoObject.getAdministrativeAreas()[0];\n      props.setRigionHandler(region);\n    });\n  };\n\n  const getGeoLocation = ymaps => {\n    setYMapState(ymaps);\n    return ymaps.geolocation.get({\n      provider: \"yandex\",\n      mapStateAutoApply: true\n    }).then(result => ymaps.geocode(result.geoObjects.position).then(res => {\n      let firstGeoObject = res.geoObjects.get(0);\n      const rigion = firstGeoObject.getAdministrativeAreas()[0];\n\n      if (rigion) {\n        dispatch(setSuccessLoading);\n      }\n\n      setMapData({\n        center: firstGeoObject.geometry.getCoordinates(),\n        zoom: 8\n      });\n      setCoordinates([firstGeoObject.geometry.getCoordinates()]);\n      props.setRigionHandler(rigion);\n    }));\n  };\n\n  const handleApiAvaliable = ymaps => {\n    dispatch(enableLoading);\n    setTimeout(() => {\n      getGeoLocation(ymaps);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(YMaps, {\n    query: {\n      apikey: '45ccaf60-7908-468d-adde-66b6dca72de5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    onClick: onMapClick,\n    width: \"640\",\n    key: 'unuq',\n    height: 500,\n    state: mapData,\n    modules: [\"geolocation\", \"geocode\"],\n    onLoad: ymaps => {\n      handleApiAvaliable(ymaps);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, coordinates.map(coordinate => /*#__PURE__*/React.createElement(Placemark, {\n    geometry: coordinate,\n    key: 'coordinate',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 48\n    }\n  }))));\n}\n\nexport default DeliveryMap;","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery/delivery__map/delivery__map.js"],"names":["React","useState","YMaps","Map","Placemark","useDispatch","enableLoading","setSuccessLoading","DeliveryMap","props","dispatch","mapData","setMapData","center","zoom","coordinates","setCoordinates","YMapState","setYMapState","onMapClick","event","stopPropagation","coords","get","myGeocoder","geocode","then","res","firstGeoObject","geoObjects","region","getAdministrativeAreas","setRigionHandler","getGeoLocation","ymaps","geolocation","provider","mapStateAutoApply","result","position","rigion","geometry","getCoordinates","handleApiAvaliable","setTimeout","apikey","map","coordinate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\nimport { useDispatch } from 'react-redux';\nimport { enableLoading, setSuccessLoading } from '../../../actions/actions';\n\nfunction DeliveryMap(props) {\n    const dispatch = useDispatch();\n\n    const [mapData, setMapData] = useState({\n        center: [59.938924, 30.315311],\n        zoom: 8,\n    });\n      \n    const [coordinates, setCoordinates] = useState([[55.684758, 37.738521]]);\n\n    const [YMapState, setYMapState] = useState('');\n\n    const onMapClick = (event) => {\n        event.stopPropagation();\n\n        const coords = event.get(\"coords\");\n        setCoordinates([coords]);\n        setMapData({\n            center: coords,\n            zoom: 8,            \n        });\n\n        const myGeocoder = YMapState.geocode([coords]);\n        myGeocoder.then(res => {\n            let firstGeoObject = res.geoObjects.get(0);\n            const region = firstGeoObject.getAdministrativeAreas()[0];\n            props.setRigionHandler(region);\n        });\n        \n    };\n\n    const getGeoLocation = ymaps => {\n\n        setYMapState(ymaps);\n\n        return ymaps.geolocation\n            .get({ provider: \"yandex\", mapStateAutoApply: true })\n            .then(result =>\n                ymaps.geocode(result.geoObjects.position).then(res => {\n                    let firstGeoObject = res.geoObjects.get(0);\n\n              \n                    const rigion = firstGeoObject.getAdministrativeAreas()[0];\n\n                    if (rigion) {\n                        dispatch(setSuccessLoading)\n                    }\n\n                    setMapData({\n                        center: firstGeoObject.geometry.getCoordinates(),\n                        zoom: 8\n                    });\n                    setCoordinates([firstGeoObject.geometry.getCoordinates()]);\n\n                    props.setRigionHandler(rigion);   \n\n                })\n            );\n    };\n\n    const handleApiAvaliable = ymaps => {\n        dispatch(enableLoading)\n        setTimeout(() => {\n            getGeoLocation(ymaps);\n        }, 3000);\n        \n    };\n\n    return (\n        <YMaps query={{\n            apikey: '45ccaf60-7908-468d-adde-66b6dca72de5', }}>\n            <Map\n                onClick={onMapClick}\n                width='640'\n                key={'unuq'}\n                height={500}\n                state={ mapData }\n                modules={[\"geolocation\", \"geocode\"]}\n                onLoad={ymaps => {\n                    handleApiAvaliable(ymaps);\n                }}\n            >\n                {coordinates.map(coordinate => <Placemark geometry={coordinate} key={'coordinate'}/>)}\n            </Map>\n        </YMaps>\n    );\n}\n\nexport default DeliveryMap;"]},"metadata":{},"sourceType":"module"}