{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery/delivery__form/delivery__form.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { sendFormData } from '../../../actions/actions';\nimport Delivery__Form_Select from './delivery__form-select';\nimport Delivery__Form_Upload from './delivery__form-upload';\nimport { schema, convert, schemaValidate } from '../../../utils/VALIDATIONS';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport blue from \"@material-ui/core/colors/blue\";\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackBarWrapper from '../../../components/custom/SnackBarWrapper';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: values.name,\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 240,\n      maxWidth: 450,\n      width: '100%',\n      textField: {\n        flexBasis: 200,\n        textField: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1)\n        }\n      }\n    }\n  }\n}));\n\nfunction Delivery__Form(props) {\n  const dispatch = useDispatch();\n  const [formState, setFormState] = useState({\n    values: {\n      rigion: '',\n      waterbase: '',\n      weight: '',\n      adress: '',\n      date: new Date(),\n      upload: ''\n    },\n    errors: {}\n  });\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  useEffect(() => {\n    setFormState(state => ({\n      values: { ...state.values,\n        rigion: props.rigionValue\n      },\n      errors: { ...state.errors\n      }\n    }));\n  }, [props]);\n\n  const handleChangeForm = async event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    const errors = await schemaValidate(name, value);\n    setFormState(state => ({\n      values: { ...state.values,\n        [name]: value\n      },\n      errors: { ...state.errors,\n        ...errors\n      }\n    }));\n  };\n\n  const handleWeightChange = name => event => {\n    if (formState.values[name] && formState.values[name].toString().charAt(0) == '.') {\n      setFormState(state => ({\n        values: { ...state.values,\n          [name]: ''\n        },\n        errors: { ...state.errors\n        }\n      }));\n      return;\n    }\n\n    (async function errors() {\n      const value = event.target.value;\n      const errors = await schemaValidate(name, value);\n      setFormState(state => ({\n        values: { ...state.values,\n          [name]: value\n        },\n        errors: { ...state.errors,\n          ...errors\n        }\n      }));\n    })();\n  };\n\n  const handleDateChange = name => value => {\n    (async function errors() {\n      const errors = await schemaValidate(name, value);\n      setFormState(state => ({\n        values: { ...state.values,\n          [name]: value\n        },\n        errors: { ...state.errors,\n          ...errors\n        }\n      }));\n    })();\n  };\n\n  const handleSelectChange = (message, value) => {\n    setFormState({\n      values: { ...formState.values,\n        waterbase: value\n      },\n      errors: { ...formState.errors,\n        waterbase: message\n      }\n    });\n  };\n\n  const handleUploadFile = value => {\n    setFormState({\n      values: { ...formState.values,\n        upload: value\n      },\n      errors: { ...formState.errors\n      }\n    });\n  };\n\n  const handleSubmit = callback => {\n    return async function (event) {\n      event.preventDefault();\n      let errors = await schema.validate(formState.values, {\n        abortEarly: false\n      }).then(_ => ({})) // сбрасывает объект ошибок состояния, если ошибок нет\n      .catch(convert);\n      setFormState(state => ({\n        values: { ...state.values\n        },\n        errors\n      }));\n\n      const isError = () => Object.entries(errors);\n\n      if (!isError().length) {\n        callback(formState.values);\n      }\n    };\n  };\n\n  const sendForm = form => {\n    new Promise(resolve => {\n      dispatch(sendFormData(form, resolve));\n    }).then(() => {\n      setOpenSnackbar(true);\n    });\n  };\n\n  const getError = (state, prop) => {\n    const isFormError = true;\n    if (state.errors[prop]) return isFormError;\n    return !isFormError;\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \" \", !props.rigionValue ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(form => {\n      sendForm(form);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-required1\",\n    label: \"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",\n    className: classes.textField,\n    value: props.rigionValue,\n    InputProps: {\n      readOnly: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Delivery__Form_Select, {\n    handleSelectChange: handleSelectChange,\n    name: formState.waterbase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), formState.errors && formState.errors.waterbase && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"waterbase-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u043E\\u043B\\u0435 \\u0432\\u043E\\u0434\\u043E\\u0431\\u0430\\u0437\\u044B \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(TextField, {\n    name: \"weight\",\n    id: \"standard-required2\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043C\\u0430\\u0441\\u0441\\u0443 \\u0432\\u043E\\u0434\\u044B \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n    className: classes.textField,\n    value: formState.values.weight,\n    onChange: handleWeightChange('weight'),\n    helperText: formState.errors.weight ? formState.errors.weight : \"\",\n    error: getError(formState, 'weight'),\n    InputProps: {\n      inputComponent: NumberFormatCustom,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 43\n        }\n      }, \"T\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"adress\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0441\",\n    value: formState.values.adress,\n    onChange: handleChangeForm,\n    fullWidth: true,\n    error: getError(formState, 'adress'),\n    helperText: formState.errors.adress ? formState.errors.adress : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n    value: formState.values.date,\n    onChange: handleDateChange('date'),\n    helperText: formState.errors.date ? formState.errors.date : \"\",\n    error: getError(formState, 'date'),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Delivery__Form_Upload, {\n    handleUploadFile: handleUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: openSnackbar,\n    autoHideDuration: 6000,\n    onClose: handleCloseSnackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SnackBarWrapper, {\n    onClose: handleCloseSnackbar,\n    variant: \"success\",\n    message: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  })));\n}\n\nDelivery__Form.propTypes = {\n  rigionValue: PropTypes.string\n};\nexport default Delivery__Form;","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery/delivery__form/delivery__form.js"],"names":["React","useState","useEffect","useCallback","useRef","useDispatch","sendFormData","Delivery__Form_Select","Delivery__Form_Upload","schema","convert","schemaValidate","TextField","makeStyles","InputAdornment","blue","CardContent","Button","Card","NumberFormat","PropTypes","DateFnsUtils","CircularProgress","Snackbar","SnackBarWrapper","MuiPickersUtilsProvider","KeyboardDatePicker","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","useStyles","theme","card","minWidth","button","color","margin","root","spacing","maxWidth","width","textField","flexBasis","marginLeft","marginRight","Delivery__Form","dispatch","formState","setFormState","rigion","waterbase","weight","adress","date","Date","upload","errors","openSnackbar","setOpenSnackbar","handleCloseSnackbar","event","reason","state","rigionValue","handleChangeForm","handleWeightChange","toString","charAt","handleDateChange","handleSelectChange","message","handleUploadFile","handleSubmit","callback","preventDefault","validate","abortEarly","then","_","catch","isError","Object","entries","length","sendForm","form","Promise","resolve","getError","prop","isFormError","classes","readOnly","inputComponent","endAdornment","vertical","horizontal","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { sendFormData } from '../../../actions/actions';\n\nimport Delivery__Form_Select from './delivery__form-select';\nimport Delivery__Form_Upload from './delivery__form-upload';\nimport { schema, convert, schemaValidate } from '../../../utils/VALIDATIONS';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport blue from \"@material-ui/core/colors/blue\";\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackBarWrapper from '../../../components/custom/SnackBarWrapper';\n \nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={values => {\n                onChange({\n                    target: {\n                        name: values.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            isNumericString\n        />\n    );\n}\n  \nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n  \nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 275,\n    },\n    button: {\n        color: blue[900],\n        margin: 10\n    },\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            minWidth: 240,\n            maxWidth: 450,\n            width: '100%',\n            textField: {\n                flexBasis: 200,\n                textField: {\n                    marginLeft: theme.spacing(1),\n                    marginRight: theme.spacing(1),\n                },\n            },\n        },\n    },\n}));\n\nfunction Delivery__Form(props) {\n \n    const dispatch = useDispatch();\n\n    const [formState, setFormState] = useState({\n        values: {\n            rigion: '',\n            waterbase: '',\n            weight: '',\n            adress: '',\n            date: new Date(),\n            upload: ''\n        },\n        errors: {}\n    });\n\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpenSnackbar(false);\n      };\n\n    useEffect(() => {\n        setFormState(state => ({\n            values: { ...state.values, rigion: props.rigionValue },\n            errors: { ...state.errors }\n        }));\n    }, [props]);\n    \n    const handleChangeForm = async (event) => {\n \n        const { target : { name, value } } = event;\n        const errors = await schemaValidate(name, value);\n        \n        setFormState(state => ({\n            values: { ...state.values, [name]: value },\n            errors: { ...state.errors, ...errors }\n        }));\n    };\n\n    const handleWeightChange = name =>  event => {\n\n        if (formState.values[name] && formState.values[name].toString().charAt(0) == '.') {\n            setFormState( state => ({\n                values: { ...state.values, [name] : '' },\n                errors: { ...state.errors }\n                })\n            );\n            return;\n        }\n\n        (async function errors() {\n            const value = event.target.value;\n            const errors = await schemaValidate(name, value);\n\n            setFormState( state => ({\n                values: { ...state.values, [name] : value },\n                errors: { ...state.errors, ...errors }\n            })\n            );\n        }());\n       \n    };\n\n    const handleDateChange = name => value => {\n        \n        (async function errors() {\n            const errors = await schemaValidate(name, value);\n\n            setFormState( state => ({\n                values: { ...state.values, [name] : value },\n                errors: { ...state.errors, ...errors }\n            })\n            );\n        }());\n     \n    };\n      \n    const handleSelectChange = (message, value) => {\n        setFormState({\n            values: { ...formState.values, waterbase : value },\n            errors: { ...formState.errors, waterbase: message }\n        });\n    };\n\n\n    const handleUploadFile = value => {\n        setFormState({\n            values: { ...formState.values, upload : value },\n            errors: { ...formState.errors }\n        });\n    };\n\n    const handleSubmit = (callback) => {\n        return async function (event) {\n            event.preventDefault();\n            \n            let errors = await schema.validate(formState.values, { abortEarly : false })\n                .then(_ => ({})) // сбрасывает объект ошибок состояния, если ошибок нет\n                .catch(convert);\n\n            setFormState(state => ({\n                values: { ...state.values },\n                errors\n            }));\n      \n            const isError = () => Object.entries(errors);\n\n            if (!isError().length) {\n                callback(formState.values);\n            }\n        };\n    };\n\n    const sendForm = (form) => {\n       new Promise((resolve) => {\n           dispatch(sendFormData(form, resolve))\n       })\n       .then(() => {\n            setOpenSnackbar(true);\n       })\n    };\n\n    const getError = (state, prop) => {\n        const isFormError = true;\n\n        if (state.errors[prop]) return isFormError;\n        return !isFormError;\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"form-container\"> \n        <Card className={classes.card}>\n            <CardContent> {\n                !props.rigionValue ? <CircularProgress />  :\n                <div className=\"form-wrapper\">\n                \n                <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit(form => {\n                    sendForm(form);\n                })}>\n                     <TextField \n                        id=\"standard-required1\" \n                        label=\"Ваш регион\"\n                        className={classes.textField}\n                        value={props.rigionValue}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                    <Delivery__Form_Select handleSelectChange={handleSelectChange} name={formState.waterbase}/>\n                    {formState.errors && formState.errors.waterbase &&\n        <div>\n            <p className=\"waterbase-error\">Поле водобазы необходимо выбрать</p>\n        </div>\n                    }\n                    <TextField \n                        name=\"weight\"\n                        id=\"standard-required2\"\n                        label=\"Напишите массу воды в тоннах\"\n                        className={classes.textField}\n                        value={formState.values.weight}\n                        onChange={handleWeightChange('weight')}\n                        helperText={formState.errors.weight ? formState.errors.weight : \"\"}\n                        error={ getError(formState, 'weight')}\n                        InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            endAdornment: <InputAdornment position=\"end\">T</InputAdornment>,\n                        }}\n                    />\n                    <TextField\n                        name=\"adress\"\n                        label=\"Напишите адресс\"\n                        value={formState.values.adress}\n                        onChange={handleChangeForm}\n                        fullWidth\n                        error={ getError(formState, 'adress')}\n                        helperText={formState.errors.adress ? formState.errors.adress : \"\"}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Выберите дату\"\n                            value={formState.values.date}\n                            onChange={handleDateChange('date')}\n                            helperText={formState.errors.date ? formState.errors.date : \"\"} \n                            error={ getError(formState, 'date')}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <Delivery__Form_Upload handleUploadFile={handleUploadFile}/>\n                    <Button variant=\"outlined\" className={classes.button} type=\"submit\">\n            Отправить\n                    </Button>\n                </form>\n            </div>\n                }\n               \n            </CardContent>\n        </Card>\n         \n                    <Snackbar\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'left',\n                    }}\n                    open={openSnackbar}\n                    autoHideDuration={6000}\n                    onClose={handleCloseSnackbar}\n                  >\n                    <SnackBarWrapper\n                      onClose={handleCloseSnackbar}\n                      variant=\"success\"\n                      message=\"Форма успешно отправлена\"\n                    />\n                  </Snackbar>\n        \n        </div>\n    );\n}\n\nDelivery__Form.propTypes = {\n    rigionValue: PropTypes.string,\n};\n\nexport default Delivery__Form;"]},"metadata":{},"sourceType":"module"}