{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-select.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240,\n    maxWidth: 450,\n    width: '100%',\n    fullWidth: true\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function FormSelect(props) {\n  const classes = useStyles();\n  const waterbasesMain = useSelector(state => state.waterBases.waterBasesList);\n  const waterbases = useSelector(state => state.waterBases.wBfilterList);\n  const rigions = useSelector(state => state.rigions.rigionList);\n  const isLoading = useSelector(state => state.shared.isLoading);\n  useEffect(() => {\n    if (waterbases.length) {\n      props.handleSelectChange(null, waterbases[0].name);\n    } else {\n      props.handleSelectChange('Не выбрана водобаза', '');\n    }\n  }, [waterbasesMain, waterbases]);\n\n  const handleChange = event => {\n    props.handleSelectChange(null, event.target.value);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (!isLoading && waterbasesMain.length && waterbases.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u043E\\u0434\\u043E\\u0431\\u0430\\u0437\\u0443\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      onChange: handleChange,\n      label: props.name,\n      inputProps: {\n        name: props.name,\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, waterbases.map(item => /*#__PURE__*/React.createElement(\"option\", Object.assign({\n      key: item.uuid\n    }, item, {\n      value: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 50\n      }\n    }), item.name)))));\n  }\n\n  if (!isLoading && waterbasesMain.length && !waterbases.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"\\u0412 \\u0432\\u0430\\u0448\\u0435\\u043C \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\\u0435 \\u043D\\u0435\\u0442 \\u0432\\u043E\\u0434\\u043E\\u0431\\u0430\\u0437.\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043A\\u043B\\u0438\\u043A\\u043D\\u0438\\u0442\\u0435 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0435 \\u043D\\u0430 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u043D\\u0438\\u0436\\u0435, \\u0433\\u0434\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0432\\u043E\\u0434\\u043E\\u0431\\u0430\\u0437\\u044B:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, rigions.map(item => /*#__PURE__*/React.createElement(\"p\", Object.assign({\n      key: item.uuid\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 43\n      }\n    }), item.area_names[0], \", \", item.area_names[1]))));\n  }\n}","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-select.js"],"names":["React","useEffect","makeStyles","InputLabel","FormControl","Select","CircularProgress","useSelector","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","width","fullWidth","selectEmpty","marginTop","FormSelect","props","classes","waterbasesMain","state","waterBases","waterBasesList","waterbases","wBfilterList","rigions","rigionList","isLoading","shared","length","handleSelectChange","name","handleChange","event","target","value","id","map","item","uuid","area_names"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 240,\n        maxWidth: 450,\n        width: '100%', \n        fullWidth: true,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function FormSelect(props) {\n    const classes = useStyles();\n\n    const waterbasesMain = useSelector(state => state.waterBases.waterBasesList);\n    const waterbases = useSelector(state => state.waterBases.wBfilterList);\n    const rigions = useSelector(state => state.rigions.rigionList);\n    const isLoading = useSelector(state => state.shared.isLoading);\n\n    useEffect(() => {\n        if (waterbases.length) {\n            props.handleSelectChange(null, waterbases[0].name);\n        } else {\n            props.handleSelectChange('Не выбрана водобаза', '');\n        }\n    }, [waterbasesMain, waterbases]);\n\n    const handleChange = (event) => {\n\n        props.handleSelectChange(null, event.target.value);\n\n    };\n\n    if (isLoading) {\n\n        return (\n            <div>\n                <CircularProgress />\n                \n            </div>\n        );\n    }\n\n    if  (!isLoading && waterbasesMain.length && waterbases.length) {\n\n        return (\n            <div> \n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"age-native-simple\">Выберите водобазу</InputLabel>\n                    <Select\n                        native\n                        onChange={handleChange}\n                        label={props.name}\n\n                        inputProps={{\n                            name: props.name,\n                            id: 'age-native-simple',\n                        }}\n                    >\n                        { waterbases.map(item => <option key={item.uuid } {...item} value={item.name}>{item.name}</option>) }\n                    </Select>\n                </FormControl>\n          \n            </div>\n        );\n    }\n\n    if (!isLoading && waterbasesMain.length && !waterbases.length) {\n        return (\n            <div>\n                <h2>В вашем регионе нет водобаз.</h2>\n                <h3>Пожалуйста, кликните на карте на регион из списка ниже, где есть водобазы:</h3>\n                <div>\n                    { rigions.map(item => <p key={item.uuid } {...item} >{item.area_names[0]}, {item.area_names[1]}</p>) }\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}