{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FormSelect from './delivery_form-select';\nimport FormUpload from './delivery_form-upload';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport blue from \"@material-ui/core/colors/blue\";\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 240,\n      maxWidth: 450,\n      width: '100%',\n      textField: {\n        flexBasis: 200,\n        textField: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1)\n        }\n      }\n    }\n  }\n}));\n\nfunction DeliveryForm(props) {\n  const form = useRef();\n  const [formState, setFormState] = React.useState({\n    data: {\n      rigion: '',\n      waterbase: '',\n      weight: '',\n      adress: '',\n      date: new Date(),\n      upload: ''\n    }\n  });\n  useEffect(() => {\n    formState.rigion = props.rigionValue;\n  }, []);\n\n  const handleChange = prop => event => {\n    setFormState({ ...formState,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleSelectChange = value => {\n    setFormState({ ...formState,\n      waterbase: value\n    });\n  };\n\n  const handleDateChange = prop => {\n    setFormState({ ...formState,\n      date: prop\n    });\n  };\n\n  const handleUploadFile = prop => {\n    setFormState({ ...formState,\n      upload: [prop]\n    });\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n  };\n\n  const helperfn = () => {\n    if (formState.adress && formState.adress.trim().length == 0) return 'Can not be empty';\n    if (formState.adress && formState.adress.replace(/[a-zA-Z0-9_ ]/g, '').length > 0) return 'Only letters and numbers';\n  };\n\n  const error = formState.adress !== \"a\";\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, props.rigionValue ? /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required1\",\n    label: \"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",\n    className: classes.textField,\n    value: props.rigionValue,\n    InputProps: {\n      readOnly: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(FormSelect, {\n    handleSelectChange: handleSelectChange,\n    name: formState.waterbase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required2\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043C\\u0430\\u0441\\u0441\\u0443 \\u0432\\u043E\\u0434\\u044B \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n    className: classes.textField,\n    value: formState.weight,\n    onChange: handleChange('weight'),\n    InputProps: {\n      inputComponent: NumberFormatCustom,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 35\n        }\n      }, \"T\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    shrink: \"true\",\n    required: true,\n    id: \"standard-required3\",\n    label: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0441\",\n    className: classes.textField,\n    value: formState.adress,\n    helperText: helperfn,\n    onChange: handleChange('adress'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    required: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n    value: formState.date,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(FormUpload, {\n    handleUploadFile: handleUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\")))));\n}\n\nexport default DeliveryForm;","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form.js"],"names":["React","useState","useEffect","useRef","FormSelect","FormUpload","TextField","makeStyles","InputAdornment","blue","CardContent","Button","Card","NumberFormat","PropTypes","DateFnsUtils","CircularProgress","ValidatorForm","TextValidator","MuiPickersUtilsProvider","KeyboardDatePicker","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","useStyles","theme","card","minWidth","button","color","margin","root","spacing","maxWidth","width","textField","flexBasis","marginLeft","marginRight","DeliveryForm","form","formState","setFormState","data","rigion","waterbase","weight","adress","date","Date","upload","rigionValue","handleChange","prop","event","handleSelectChange","handleDateChange","handleUploadFile","submitForm","e","preventDefault","helperfn","trim","length","replace","error","classes","readOnly","inputComponent","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FormSelect from './delivery_form-select'\nimport FormUpload from './delivery_form-upload'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport blue from \"@material-ui/core/colors/blue\";\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n \n\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n  \n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={inputRef}\n        onValueChange={values => {\n          onChange({\n            target: {\n              value: values.value,\n            },\n          });\n        }}\n        isNumericString\n      />\n    );\n  }\n  \n  NumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n  \nconst useStyles = makeStyles((theme) => ({\n    card: {\n      minWidth: 275,\n    },\n    button: {\n      color: blue[900],\n      margin: 10\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        minWidth: 240,\n        maxWidth: 450,\n        width: '100%',\n        textField: {\n            flexBasis: 200,\n            textField: {\n                marginLeft: theme.spacing(1),\n                marginRight: theme.spacing(1),\n              },\n          },\n      },\n    },\n  }));\n\n\n\nfunction DeliveryForm(props) {\n  const form = useRef();\n\n    const [formState, setFormState] = React.useState({\n      data: {\n        rigion: '',\n        waterbase: '',\n        weight: '',\n        adress: '',\n        date: new Date(),\n        upload: ''\n      }\n    });\n\n  \n      useEffect(()=> {\n        formState.rigion = props.rigionValue\n      }, [])\n\n    \n      const handleChange = prop => event => {\n        setFormState({\n             ...formState,\n              [prop]: event.target.value \n            });\n      };\n\n      const handleSelectChange = value => {\n        setFormState({\n             ...formState,\n              waterbase: value\n            });\n      };\n\n      const handleDateChange = prop => {\n       \n        setFormState({\n            ...formState,\n             date: prop\n           });\n    };\n\n    const handleUploadFile = prop => {\n        setFormState({\n            ...formState,\n             upload: [prop]\n           });\n    };\n\n  \n\n    const submitForm = e => {\n      e.preventDefault();\n \n    }\n \n\n  const helperfn = () => {    \n          if (formState.adress && formState.adress.trim().length==0) return 'Can not be empty';\n          if (formState.adress && formState.adress.replace(/[a-zA-Z0-9_ ]/g, '').length>0) return 'Only letters and numbers';\n        } \n\n    const error = formState.adress !== \"a\";\n\n    const classes = useStyles();\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n        <div className=\"form-wrapper\">\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={submitForm}>\n             {props.rigionValue ? <TextField \n                required \n                id=\"standard-required1\" \n                label=\"Ваш регион\"\n                className={classes.textField}\n                value={props.rigionValue}\n                InputProps={{\n                    readOnly: true,\n                }}\n             />\n             : <CircularProgress />\n            }\n            <FormSelect handleSelectChange={handleSelectChange} name={formState.waterbase}/>\n            <TextField \n                required \n                id=\"standard-required2\" \n                label=\"Напишите массу воды в тоннах\"\n                className={classes.textField}\n                value={formState.weight}\n                onChange={handleChange('weight')}\n                InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    endAdornment: <InputAdornment position=\"end\">T</InputAdornment>,\n                  }}\n             />\n             <TextField\n                shrink='true'\n                required \n                id=\"standard-required3\" \n                label=\"Напишите адресс\"\n                className={classes.textField}\n                value={formState.adress}\n                helperText={helperfn}\n                onChange={handleChange('adress')}\n             />\n             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n             <KeyboardDatePicker\n                disableToolbar\n                required\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Выберите дату\"\n                value={formState.date}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n            </MuiPickersUtilsProvider>\n            <FormUpload handleUploadFile={handleUploadFile}/>\n              <Button variant=\"outlined\" className={classes.button} type=\"submit\">\n                Отправить\n              </Button>\n         </form>\n         </div>\n         </CardContent>\n         </Card>\n    );\n}\n\nexport default DeliveryForm;"]},"metadata":{},"sourceType":"module"}