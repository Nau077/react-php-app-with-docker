{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-upload.js\";\nimport React from \"react\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport red from \"@material-ui/core/colors/red\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 406,\n    margin: 'auto',\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing(2)\n  },\n  iconHover: {\n    margin: theme.spacing(2),\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing(2),\n    backgroundColor: \"default\"\n  }\n});\n\nclass FormUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainState: \"initial\",\n      imageUploaded: 0,\n      selectedFile: null,\n      type: null,\n      name: null\n    };\n\n    this.handleUploadClick = event => {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      let url = reader.readAsDataURL(file);\n      this.props.handleUploadFile(this.state.selectedFile);\n      const name = event.target.files[0].name;\n      const lastDot = name.lastIndexOf('.');\n      const fileName = name.substring(0, lastDot);\n      const ext = name.substring(lastDot + 1);\n      console.log(fileName);\n      console.log(ext);\n\n      reader.onloadend = function (e) {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      }.bind(this);\n\n      this.setState({\n        mainState: \"uploaded\",\n        selectedFile: event.target.files[0],\n        imageUploaded: 1,\n        type: ext,\n        name: name\n      });\n    };\n  }\n\n  renderInitialState() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/jpeg,image/gif,image/png,application/pdf,image/x-eps\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleUploadClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      component: \"span\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddPhotoAlternateIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  renderUploadedState() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.state.type !== 'pdf' ? /*#__PURE__*/React.createElement(\"img\", {\n      width: \"70%\",\n      className: classes.media,\n      src: this.state.selectedFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, this.state.name)));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-card__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-card__signature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0434\\u043E\\u0432\\u0435\\u0440\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u043D\\u0430 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F\"), this.renderInitialState(), this.state.mainState == \"uploaded\" && this.renderUploadedState())));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(FormUpload);","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-upload.js"],"names":["React","CardActionArea","CardContent","Fab","blue","Grid","AddPhotoAlternateIcon","red","withStyles","styles","theme","root","backgroundColor","palette","background","paper","width","margin","display","justifyContent","alignItems","icon","spacing","iconHover","color","cardHeader","textalign","align","input","title","fontWeight","fontFamily","button","secondaryButton","typography","FormUpload","Component","state","mainState","imageUploaded","selectedFile","type","name","handleUploadClick","event","file","target","files","reader","FileReader","url","readAsDataURL","props","handleUploadFile","lastDot","lastIndexOf","fileName","substring","ext","console","log","onloadend","e","setState","result","bind","renderInitialState","classes","renderUploadedState","media","render","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport red from \"@material-ui/core/colors/red\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 406,\n    margin: 'auto',\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing(2)\n  },\n  iconHover: {\n    margin: theme.spacing(2),\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing(2),\n    backgroundColor: \"default\"\n  },\n\n});\n\nclass FormUpload extends React.Component {\n\n  state = {\n    mainState: \"initial\",\n    imageUploaded: 0,\n    selectedFile: null,\n    type: null,\n    name: null\n  };\n\n  handleUploadClick = event => {\n    let file = event.target.files[0];\n    const reader = new FileReader();\n    let url = reader.readAsDataURL(file);\n \n    this.props.handleUploadFile(this.state.selectedFile) \n\n    const name = event.target.files[0].name;\n    const lastDot = name.lastIndexOf('.');\n\n    const fileName = name.substring(0, lastDot);\n    const ext = name.substring(lastDot + 1);\n\n    console.log(fileName)\n    console.log(ext)\n\n\n    reader.onloadend = function(e) {\n      this.setState({\n        selectedFile: [reader.result]\n      });\n    }.bind(this);\n\n    this.setState({\n      mainState: \"uploaded\",\n      selectedFile: event.target.files[0],\n      imageUploaded: 1,\n      type: ext,\n      name: name\n    });\n    \n  };\n\n  renderInitialState() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CardContent>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <input\n              accept=\"image/jpeg,image/gif,image/png,application/pdf,image/x-eps\"\n              className={classes.input}\n              id=\"contained-button-file\"\n              multiple\n              type=\"file\"\n              onChange={this.handleUploadClick}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Fab component=\"span\" className={classes.button}>\n                <AddPhotoAlternateIcon />\n              </Fab>\n            </label>\n          </Grid>\n        </CardContent>\n      </React.Fragment>\n    );\n  }\n\n  renderUploadedState() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CardActionArea>\n        {\n          this.state.type !== 'pdf' ?\n          <img\n          width=\"70%\"\n          className={classes.media}\n          src={this.state.selectedFile}\n        /> :\n        <p>{this.state.name}</p>\n        }\n        </CardActionArea>\n      </React.Fragment>\n    );\n  }\n \n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <div className=\"upload-card__wrapper\">\n          <div className=\"upload-card__signature\">\n            Загрузите доверенность на водителя\n         </div>\n            {(this.renderInitialState())}\n            {  (this.state.mainState == \"uploaded\" &&\n                this.renderUploadedState())\n                }\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(FormUpload);\n"]},"metadata":{},"sourceType":"module"}