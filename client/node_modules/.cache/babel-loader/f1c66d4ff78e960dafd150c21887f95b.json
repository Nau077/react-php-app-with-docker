{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/custom/inputForm.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeliveryForm from \"../delivery__modules/delivery_form\";\nimport Paper from \"@material-ui/core/Paper\";\nimport * as Yup from \"yup\";\nconst validationSchema = Yup.object({\n  rigion: Yup.string(\"Enter a name\").required(\"Name is required\"),\n  email: Yup.string(\"Enter your email\").email(\"Enter a valid email\").required(\"Email is required\"),\n  address: Yup.string(\"\").min(8, \"address must contain at least 8 characters\").required(\"Enter your address\"),\n  confirmPassword: Yup.string(\"Enter your password\").required(\"Confirm your password\").oneOf([Yup.ref(\"password\")], \"Password does not match\")\n});\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px`\n  },\n  container: {\n    maxWidth: \"200px\"\n  }\n});\n\nfunction InputForm(props) {\n  const classes = props;\n  const values = {\n    rigion: \"\",\n    email: \"\",\n    address: \"\",\n    password: \"\"\n  };\n\n  const submit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, \"Form\"), /*#__PURE__*/React.createElement(Formik, {\n    render: props => /*#__PURE__*/React.createElement(DeliveryForm, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 31\n      }\n    })),\n    initialValues: values,\n    validationSchema: validationSchema,\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }))));\n}\n\nexport default withStyles(styles)(InputForm);","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/custom/inputForm.js"],"names":["React","Component","Formik","withStyles","DeliveryForm","Paper","Yup","validationSchema","object","rigion","string","required","email","address","min","confirmPassword","oneOf","ref","styles","theme","paper","marginTop","spacing","unit","display","flexDirection","alignItems","padding","container","maxWidth","InputForm","props","classes","values","password","submit","data","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeliveryForm from \"../delivery__modules/delivery_form\";\nimport Paper from \"@material-ui/core/Paper\";\nimport * as Yup from \"yup\"\n\nconst validationSchema = Yup.object({\n    rigion: Yup.string(\"Enter a name\")\n    .required(\"Name is required\"),\n    email: Yup.string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n    address: Yup.string(\"\")\n    .min(8, \"address must contain at least 8 characters\")\n    .required(\"Enter your address\"),\n    confirmPassword: Yup.string(\"Enter your password\")\n    .required(\"Confirm your password\")\n    .oneOf([Yup.ref(\"password\")], \"Password does not match\")\n})\n\nconst styles = theme => ({\n paper: {\n   marginTop: theme.spacing.unit * 8,\n   display: \"flex\",\n   flexDirection: \"column\",\n   alignItems: \"center\",\n   padding: `${theme.spacing.unit * 5}px ${theme.spacing.unit * 5}px ${theme\n     .spacing.unit * 5}px`\n },\n container: {\n   maxWidth: \"200px\"\n }\n});\n\nfunction InputForm(props) {\n\n   const classes = props;\n   const values = { rigion: \"\", email: \"\",  address: \"\", password: \"\" };\n\n   const submit = data => {\n    console.log(data);\n  };\n   return (\n     <React.Fragment>\n          <div className={classes.container}>\n         <Paper elevation={1} className={classes.paper}>\n           <h1>Form</h1>\n           <Formik\n             render={props => <DeliveryForm {...props} />}\n             initialValues={values}\n             validationSchema={validationSchema}\n             onSubmit={submit}\n           />\n         </Paper>\n       </div>\n     </React.Fragment>\n   );\n}\n\nexport default withStyles(styles)(InputForm);\n"]},"metadata":{},"sourceType":"module"}