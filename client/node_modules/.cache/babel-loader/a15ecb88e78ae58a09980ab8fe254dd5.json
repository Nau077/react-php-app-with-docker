{"ast":null,"code":"var _jsxFileName = \"/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-upload.js\";\nimport React from \"react\"; //Card\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport red from \"@material-ui/core/colors/red\"; //Tabs\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 440,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing.unit * 2\n  },\n  iconHover: {\n    margin: theme.spacing.unit * 2,\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing.unit * 2,\n    backgroundColor: \"default\"\n  }\n});\n\nclass FormUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainState: \"initial\",\n      imageUploaded: 0,\n      selectedFile: null\n    };\n\n    this.handleUploadClick = event => {\n      console.log();\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = function (e) {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      }.bind(this);\n\n      this.setState({\n        mainState: \"uploaded\",\n        selectedFile: event.target.files[0],\n        imageUploaded: 1\n      });\n    };\n  }\n\n  renderInitialState() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleUploadClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      component: \"span\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddPhotoAlternateIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  renderUploadedState() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"70%\",\n      className: classes.media,\n      src: this.state.selectedFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: this.props.cardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, this.renderInitialState(), this.state.mainState == \"uploaded\" && this.renderUploadedState())));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(FormUpload);","map":{"version":3,"sources":["/home/roman/web/php-docker-api/client/src/components/delivery__modules/delivery_form-upload.js"],"names":["React","Card","CardActionArea","CardContent","Fab","blue","Grid","AddPhotoAlternateIcon","red","withStyles","styles","theme","root","backgroundColor","palette","background","paper","width","display","justifyContent","alignItems","icon","margin","spacing","unit","iconHover","color","cardHeader","textalign","align","input","title","fontWeight","fontFamily","button","secondaryButton","typography","FormUpload","Component","state","mainState","imageUploaded","selectedFile","handleUploadClick","event","console","log","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","setState","result","bind","renderInitialState","classes","props","value","renderUploadedState","media","render","cardName","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\n//Card\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport red from \"@material-ui/core/colors/red\";\n\n//Tabs\nimport { withStyles } from \"@material-ui/core/styles\";\n\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 440,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing.unit * 2\n  },\n  iconHover: {\n    margin: theme.spacing.unit * 2,\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[900],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing.unit * 2,\n    backgroundColor: \"default\"\n  },\n\n});\n\nclass FormUpload extends React.Component {\n  state = {\n    mainState: \"initial\",\n    imageUploaded: 0,\n    selectedFile: null\n  };\n\n  handleUploadClick = event => {\n    console.log();\n    var file = event.target.files[0];\n    const reader = new FileReader();\n    var url = reader.readAsDataURL(file);\n\n    reader.onloadend = function(e) {\n      this.setState({\n        selectedFile: [reader.result]\n      });\n    }.bind(this);\n\n    this.setState({\n      mainState: \"uploaded\",\n      selectedFile: event.target.files[0],\n      imageUploaded: 1\n    });\n  };\n\n  renderInitialState() {\n    const { classes, theme } = this.props;\n    const { value } = this.state;\n\n    return (\n      <React.Fragment>\n        <CardContent>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <input\n              accept=\"image/*\"\n              className={classes.input}\n              id=\"contained-button-file\"\n              multiple\n              type=\"file\"\n              onChange={this.handleUploadClick}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Fab component=\"span\" className={classes.button}>\n                <AddPhotoAlternateIcon />\n              </Fab>\n            </label>\n          </Grid>\n        </CardContent>\n      </React.Fragment>\n    );\n  }\n\n  renderUploadedState() {\n    const { classes, theme } = this.props;\n\n    return (\n      <React.Fragment>\n        <CardActionArea>\n          <img\n            width=\"70%\"\n            className={classes.media}\n            src={this.state.selectedFile}\n          />\n        </CardActionArea>\n      </React.Fragment>\n    );\n  }\n \n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <Card className={this.props.cardName}>\n            {(this.renderInitialState())}\n            {  (this.state.mainState == \"uploaded\" &&\n                this.renderUploadedState())\n                }\n          </Card>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(FormUpload);\n"]},"metadata":{},"sourceType":"module"}